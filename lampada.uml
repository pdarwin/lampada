<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_OTt8UI0HEeyTK68GWrtVgA" name="lampada">
    <eAnnotations xmi:id="_Qq52II0HEeyTK68GWrtVgA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Qq6dMI0HEeyTK68GWrtVgA" source="codegen">
        <details xmi:id="_Qq6dMY0HEeyTK68GWrtVgA" key="codegenDirectory" value="/lampada/src"/>
        <details xmi:id="_RQ2b0I0HEeyTK68GWrtVgA" key="AssociatedSourceCode" value="/lampada/src/magiclamp/AudioPlayer.java;1185789619/1;/lampada/src/magiclamp/BadGenie.java;2085911701/1;/lampada/src/magiclamp/Demon.java;3397461049/1;/lampada/src/magiclamp/Genie.java;787617493/1;/lampada/src/magiclamp/MagicLamp.java;1829404811/1;/lampada/src/magiclamp/Main.java;2898041199/1;/lampada/src/magiclamp/MidiSequencer.java;264330266/1;/lampada/src/magiclamp/MyErrorHandler.java;4213570077/1;/lampada/src/magiclamp/NiceGenie.java;997856454/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_RCyKoI0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_RCzYwI0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_RCz_0I0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_RCz_0Y0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_RCz_0o0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_RC0m4I0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_RC0m4Y0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_RC0m4o0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_RC11AI0HEeyTK68GWrtVgA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_RC77oI0HEeyTK68GWrtVgA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_RC8isI0HEeyTK68GWrtVgA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_RGzH8I0HEeyTK68GWrtVgA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHPz4I0HEeyTK68GWrtVgA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHRCAY0HEeyTK68GWrtVgA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHS3MI0HEeyTK68GWrtVgA" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHYWwI0HEeyTK68GWrtVgA" name="BufferedInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHaL8I0HEeyTK68GWrtVgA" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHcBII0HEeyTK68GWrtVgA" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHdPQI0HEeyTK68GWrtVgA" name="InputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RDSg8I0HEeyTK68GWrtVgA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_RHIfII0HEeyTK68GWrtVgA" name="Scanner"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHUFUY0HEeyTK68GWrtVgA" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RHlyII0HEeyTK68GWrtVgA" name="InputMismatchException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RIFhYI0HEeyTK68GWrtVgA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_RIFhYY0HEeyTK68GWrtVgA" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RC9JwI0HEeyTK68GWrtVgA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_RC9JwY0HEeyTK68GWrtVgA" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_RC9w0I0HEeyTK68GWrtVgA" name="sampled">
          <packagedElement xmi:type="uml:Class" xmi:id="_RG2yUI0HEeyTK68GWrtVgA" name="AudioFormat"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RG4ngI0HEeyTK68GWrtVgA" name="AudioInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RG6csI0HEeyTK68GWrtVgA" name="AudioSystem"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RG848Y0HEeyTK68GWrtVgA" name="Clip"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RG-uIY0HEeyTK68GWrtVgA" name="DataLine"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RHAjUI0HEeyTK68GWrtVgA" name="LineEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RHBxcY0HEeyTK68GWrtVgA" name="LineListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RHnAQY0HEeyTK68GWrtVgA" name="LineUnavailableException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RHoOYY0HEeyTK68GWrtVgA" name="UnsupportedAudioFileException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RDyQMI0HEeyTK68GWrtVgA" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_RHedYY0HEeyTK68GWrtVgA" name="InvalidMidiDataException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RHgSkI0HEeyTK68GWrtVgA" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RHhgsY0HEeyTK68GWrtVgA" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RHiu0Y0HEeyTK68GWrtVgA" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RDJ-EI0HEeyTK68GWrtVgA" name="magiclamp">
      <packagedElement xmi:type="uml:Class" xmi:id="_REL40I0HEeyTK68GWrtVgA" name="AudioPlayer">
        <ownedComment xmi:id="_RI7O4I0HEeyTK68GWrtVgA">
          <body>Classe para tocar um ficheiro .wav usando o Clip da Java Sound API.&#xD;
@author www.codejava.net&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_RIOrUI0HEeyTK68GWrtVgA" name="playCompleted" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_RH4tEI0HEeyTK68GWrtVgA" client="_REL40I0HEeyTK68GWrtVgA" supplier="_RHBxcY0HEeyTK68GWrtVgA" contract="_RHBxcY0HEeyTK68GWrtVgA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIo7AI0HEeyTK68GWrtVgA" name="play" specification="_RET0oI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIpiEI0HEeyTK68GWrtVgA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String basePath = new File(&quot;&quot;).getAbsolutePath(); // Vai buscar o caminho relativo da pasta&#xD;
&#xD;
     File audioFile = new File(basePath + &quot;\\&quot; + filename); // cria o ficheiro&#xD;
 &#xD;
     try &#xD;
     {&#xD;
         AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile); // cria o audio stream&#xD;
 &#xD;
         AudioFormat format = audioStream.getFormat(); // vai buscar o formato do audiostream&#xD;
 &#xD;
         DataLine.Info info = new DataLine.Info(Clip.class, format); // com o formato, cria um objeto DataLine&#xD;
 &#xD;
         Clip audioClip = (Clip) AudioSystem.getLine(info); // gera o audioclip, uando o dataline criado&#xD;
 &#xD;
         audioClip.addLineListener(this); // adiciona um listener&#xD;
 &#xD;
         audioClip.open(audioStream); // abre o audiofile&#xD;
          &#xD;
         audioClip.start(); // come√ßa a tocar&#xD;
          &#xD;
         while (!playCompleted) // ciclo para esperar que termine de tocar o audio&#xD;
         {&#xD;
             &#xD;
             try &#xD;
             {&#xD;
                 Thread.sleep(1000);&#xD;
             } catch (InterruptedException ex) {&#xD;
             	MyErrorHandler.errorHandler(ex, null, null);&#xD;
             }&#xD;
         }&#xD;
          &#xD;
         audioClip.close(); //fecha o audio, se parou de tocar&#xD;
          &#xD;
     }&#xD;
     catch (Exception ex)&#xD;
     {&#xD;
         MyErrorHandler.errorHandler(ex, null, null);&#xD;
     }&#xD;
      &#xD;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIwPwI0HEeyTK68GWrtVgA" name="update" specification="_RH57MI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIwPwY0HEeyTK68GWrtVgA" name="event" type="_RHAjUI0HEeyTK68GWrtVgA"/>
          <language>java</language>
          <body>LineEvent.Type type = event.getType(); // Vai buscar o tipo de evento&#xD;
      &#xD;
     if (type == LineEvent.Type.START) &#xD;
     {&#xD;
         //System.out.println(&quot;Playback started.&quot;);&#xD;
          &#xD;
     } else if (type == LineEvent.Type.STOP) &#xD;
     {&#xD;
         playCompleted = true; // se acabou, acerta o boleano&#xD;
         //System.out.println(&quot;Playback completed.&quot;);&#xD;
     }&#xD;
 &#xD;
 </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_RET0oI0HEeyTK68GWrtVgA" name="play" method="_RIo7AI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RET0oY0HEeyTK68GWrtVgA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RH57MI0HEeyTK68GWrtVgA" name="update" method="_RIwPwI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RH6iQI0HEeyTK68GWrtVgA" name="event" type="_RHAjUI0HEeyTK68GWrtVgA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_REbJYI0HEeyTK68GWrtVgA" name="BadGenie">
        <ownedComment xmi:id="_RI7O4Y0HEeyTK68GWrtVgA">
          <body>G√©nio mau - s√≥ concede um desejo&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_RHH4EI0HEeyTK68GWrtVgA" general="_RElhcI0HEeyTK68GWrtVgA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIw20I0HEeyTK68GWrtVgA" name="BadGenie" specification="_REc-kI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIxd4I0HEeyTK68GWrtVgA" type="_REbJYI0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.numWishes = 1; // inicializa o n.¬∫ total de desejos&#xD;
		this.remWishes = 1; // inicializa o n.¬∫ de desejos restantes&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIxd4Y0HEeyTK68GWrtVgA" name="showMe" specification="_REeMsI0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>Main.clearConsole(); // limpa a consola&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;               ##                                                %              &quot;);&#xD;
		System.out.println(&quot;              %&amp;@@,                                            /@&amp;@.            &quot;);&#xD;
		System.out.println(&quot;              @@@@@@*                                        (&amp;&amp;@@&amp;@            &quot;);&#xD;
		System.out.println(&quot;             &amp;@@@@@&amp;&amp;&amp;(                                    %@@@@@@@@,           &quot;);&#xD;
		System.out.println(&quot;             @@@@@@@@@&amp;@&amp;                                &amp;@@@@@@@@@@*           &quot;);&#xD;
		System.out.println(&quot;             @@@@@@@@@@@@@&amp;                            &amp;@&amp;@@@@@@@@@@*           &quot;);&#xD;
		System.out.println(&quot;             %@@@@@@@@@@@@@@@                       .&amp;&amp;@@@@@@@@@@@&amp;@,           &quot;);&#xD;
		System.out.println(&quot;              &amp;@@@@@@@@@@@@@@@&amp;,                  /&amp;@@@@@@@@@@@@@@&amp;#            &quot;);&#xD;
		System.out.println(&quot;               @@@@@@@@@@@@@@@@@@#              &amp;@@@@@@@@@@@@@@@@@&amp;        &amp;    &quot;);&#xD;
		System.out.println(&quot;                %@@@@&amp;@@@@@@@@@@@&amp;@#          &amp;@@&amp;@@@@@@@@@@@@@&amp;&amp;(        *&amp;    &quot;);&#xD;
		System.out.println(&quot;     *  ..         ,&amp;@@@@@@@@@@@@&amp;@%          &amp;@@@@@@@@@@@@@&amp;&amp;,          .&amp;*    &quot;);&#xD;
		System.out.println(&quot;     &amp;,  @(                &amp;@@&amp;@@/..          #.&amp;&amp;@@@&amp;&amp;.                 @@     &quot;);&#xD;
		System.out.println(&quot;     .@( /@&amp;                                                            &amp;@&amp;     &quot;);&#xD;
		System.out.println(&quot;      (@&amp; @@@.                                                        .&amp;@&amp;.     &quot;);&#xD;
		System.out.println(&quot;       &amp;@@@@@@&amp;                                                      (&amp;&amp;@#      &quot;);&#xD;
		System.out.println(&quot;        %&amp;@&amp;@@@&amp;,   *&amp;                                         #.   &amp;@@@&amp;       &quot;);&#xD;
		System.out.println(&quot;         *@@@@@@@&amp;. #@&amp;&amp;                                      @@@ #@&amp;&amp;&amp;&amp;        &quot;);&#xD;
		System.out.println(&quot;           @@@@@@@@@@@@@@@        *&amp;             .@&amp;,       *&amp;@@@@&amp;&amp;.#%         &quot;);&#xD;
		System.out.println(&quot;             @&amp;@@@@@@@@@@@@@     .@@@&amp;          &amp;&amp;@@&amp;&amp;     &amp;&amp;@@@@&amp;&amp;  ,          &quot;);&#xD;
		System.out.println(&quot;               .  &amp;@@&amp;@@@@&amp;&amp;@@#  &amp;@@@@@@      /@@@@@@@@  @@@@@&amp;&amp;@%              &quot;);&#xD;
		System.out.println(&quot;                   .@&amp;@@@@@&amp;@&amp;@&amp;@@@@@@@&amp;&amp;&amp;  /&amp;@@@@@&amp;@@@@@&amp;&amp;  .@@                &quot;);&#xD;
		System.out.println(&quot;                      @@@@   *@@@@@@@@@@@@&amp;&amp;@@@@@@@(@@@&amp;&amp;                       &quot;);&#xD;
		System.out.println(&quot;                         *       /@@@@    &amp;@@@@&amp;&amp;                               &quot;);&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;                                                                                &quot;);&#xD;
		System.out.println(&quot;          Eu sou o g√©nio mau, e vou conceder apenas um desejo!                  &quot;);&#xD;
		&#xD;
		AudioPlayer player = new AudioPlayer(); &#xD;
		player.play(&quot;Evil_laugh.wav&quot;); // toca a gargalhada do g√©nio mau&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_REc-kI0HEeyTK68GWrtVgA" name="BadGenie" method="_RIw20I0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_REc-kY0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_REdloI0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_REdloY0HEeyTK68GWrtVgA" type="_REbJYI0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_REeMsI0HEeyTK68GWrtVgA" name="showMe" method="_RIxd4Y0HEeyTK68GWrtVgA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_REfa0I0HEeyTK68GWrtVgA" name="Demon">
        <ownedComment xmi:id="_RI718I0HEeyTK68GWrtVgA">
          <body>Dem√≥nio recicl√°vel&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_RHKUUI0HEeyTK68GWrtVgA" general="_RElhcI0HEeyTK68GWrtVgA"/>
        <ownedAttribute xmi:id="_RIQggI0HEeyTK68GWrtVgA" name="recycled" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_RIRHkI0HEeyTK68GWrtVgA" value="false"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIyE8I0HEeyTK68GWrtVgA" name="Demon" specification="_REhQAI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIyE8Y0HEeyTK68GWrtVgA" name="aNumWishes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RIyE8o0HEeyTK68GWrtVgA" type="_REfa0I0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIysAI0HEeyTK68GWrtVgA" name="recycle" specification="_REh3E40HEeyTK68GWrtVgA">
          <language>java</language>
          <body>System.out.println(&quot;O dem√≥nio est√° a ser consumido!&quot;);&#xD;
		AudioPlayer player = new AudioPlayer();&#xD;
		player.play(&quot;Demon_dying.wav&quot;); // Toca som do dem√≥nio a morrer&#xD;
		recycled = true; // Coloca o dem√≥nio como consumido&#xD;
		System.out.println(&quot;Dem√≥nio consumido. L√¢mpada em reciclagem...&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIysAY0HEeyTK68GWrtVgA" name="grantWishDemon" specification="_RH9lkI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIysAo0HEeyTK68GWrtVgA" name="aWish">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RIysA40HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIysBI0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.println(&quot;Desejo concedido! &quot; + aWish + &quot; foi realizado. Escolha outro desejo, ou \&quot;x\&quot; para sair.&quot;);&#xD;
		String resposta = MyErrorHandler.tryScannerNextLine(sc) ; // Guarda o desejo escolhido na vari√°vel&#xD;
		&#xD;
		if (!resposta.equals(&quot;x&quot;)) // se a resposta √© diferente de x (c√≥digo de sa√≠da)&#xD;
			{&#xD;
			this.grantWishDemon(resposta, sc); // realiza o desejo&#xD;
			return true;&#xD;
			}&#xD;
		else return false; // retirna falso, se for escolhido o c√≥digo de sa√≠da &quot;x&quot;&#xD;
&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIzTEI0HEeyTK68GWrtVgA" name="showMe" specification="_REjFMI0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>Main.clearConsole(); // limpa a consola&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@ (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ *@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@(. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/  @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@, &amp; @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, % &amp;@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@&amp; #@  @@@@@@@%   *%@&amp;&amp;&amp;&amp;&amp;@(.   &amp;@@@@@@@  %. @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@# #%@  &amp;  (#*******************&amp;. .( .@%, @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@  #  &amp;***************************/  %  @@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@( .*,*****************************,%  @@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@  /,  ,,,***********************,,, .,#  @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@% .*,,. &amp;&amp;  ,,*****************,,  @. ,,*/  @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@&amp;  **,,,  @@@@%  ,***********,  @@@@@  ,,**/  @@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@  ****,,, .@@@@@@@( .*****  &amp;@@@@@@@  ,,,**** ,@@@@@@@@@@@@@@@  /@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@  *****,,,. /@@@@@.   ***   (@@@@@  ,,,******  @@@@@@@  ,,,,, *** @@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@  *********,,,,*.  ********,  .,,,,**********  @@@@@ * ,@@@@.,,,.  (@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@  ******************************************, .@@@@ * &amp;@@@@(%@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@* .*****************************************  @@@@,,,.@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@  ,***************************************  &amp;@@@@ * @@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@. .,***********************************,  @@@@@ *,.@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@  ,********************************,. /@@@@@ *, @@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@  ,,***************************,  .,**,,**, &amp;@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@&amp;  .,,*******************,,. .@@@@(.  *@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@&amp;   ,,,,,,,,,,,,,,,  *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;&amp;%&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@   Eu sou o dem√≥nio recicl√°vel, e posso realizar todos os seus desejos!  @@@@&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_REhQAI0HEeyTK68GWrtVgA" name="Demon" method="_RIyE8I0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_REh3EI0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_REh3EY0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_REhQAY0HEeyTK68GWrtVgA" name="aNumWishes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_REh3Eo0HEeyTK68GWrtVgA" type="_REfa0I0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_REh3E40HEeyTK68GWrtVgA" name="recycle" method="_RIysAI0HEeyTK68GWrtVgA"/>
        <ownedOperation xmi:id="_REjFMI0HEeyTK68GWrtVgA" name="showMe" method="_RIzTEI0HEeyTK68GWrtVgA"/>
        <ownedOperation xmi:id="_RH9lkI0HEeyTK68GWrtVgA" name="grantWishDemon" method="_RIysAY0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RH-MoI0HEeyTK68GWrtVgA" name="aWish">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RH-MoY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RH-Moo0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RElhcI0HEeyTK68GWrtVgA" name="Genie" isAbstract="true">
        <ownedComment xmi:id="_RI718Y0HEeyTK68GWrtVgA">
          <body>Classe abstracta para g√©nios de qualquer tipo&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_RIRuoI0HEeyTK68GWrtVgA" name="numWishes" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RIS8wI0HEeyTK68GWrtVgA" name="remWishes" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIzTEY0HEeyTK68GWrtVgA" name="Genie" specification="_REnWoI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIzTEo0HEeyTK68GWrtVgA" type="_RElhcI0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIz6II0HEeyTK68GWrtVgA" name="getNumWishes" specification="_REn9sY0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIz6IY0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return numWishes;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIz6Io0HEeyTK68GWrtVgA" name="getRemWishes" specification="_REokwY0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIz6I40HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return remWishes;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RIz6JI0HEeyTK68GWrtVgA" name="grantWish" specification="_REpy4I0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIz6JY0HEeyTK68GWrtVgA" name="aWish">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RIz6Jo0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (remWishes > 0) // Se ainda existirem desejos por realizar&#xD;
		{ &#xD;
			// Aqui ficaria o c√≥digo para realiza√ß√£o do desejo, em caso de&#xD;
			// desta funcionalidade&#xD;
			&#xD;
			remWishes-=1; // subtrai 1 desejo&#xD;
			System.out.println(&quot;Desejo concedido! &quot; + aWish + &quot; foi realizado. &quot; + &#xD;
					(remWishes==0 ? &quot;N√£o lhe restam mais&quot; : &quot;Ainda lhe restam &quot; + remWishes + &#xD;
					&quot; de &quot; + numWishes) + &quot; desejos.&quot;); // mensagem informativa ao utilizador&#xD;
			&#xD;
			return true; //verdadeiro se realizado&#xD;
		}&#xD;
		return false; // falso se n√£o realizado (n√£o existem mais desejos)&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI0hMI0HEeyTK68GWrtVgA" name="showMe" specification="_REqZ8I0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>// NADA&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_REnWoI0HEeyTK68GWrtVgA" name="Genie" method="_RIzTEY0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_REnWoY0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_REnWoo0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_RI718o0HEeyTK68GWrtVgA">
            <body>Construtor do g√©nio</body>
          </ownedComment>
          <ownedParameter xmi:id="_REn9sI0HEeyTK68GWrtVgA" type="_RElhcI0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_REn9sY0HEeyTK68GWrtVgA" name="getNumWishes" method="_RIz6II0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI8dAI0HEeyTK68GWrtVgA">
            <body>@return retorna o n√∫mero de desejos pedidos</body>
          </ownedComment>
          <ownedParameter xmi:id="_REokwI0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_REokwY0HEeyTK68GWrtVgA" name="getRemWishes" method="_RIz6Io0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI8dAY0HEeyTK68GWrtVgA">
            <body>@return retorna o n√∫mero de desejos ainda dispon√≠veis</body>
          </ownedComment>
          <ownedParameter xmi:id="_REpL0I0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_REpy4I0HEeyTK68GWrtVgA" name="grantWish" method="_RIz6JI0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI8dAo0HEeyTK68GWrtVgA">
            <body>Fun√ß√£o geral que pede ao g√©nio que realize um desejo.&#xD;
	 * Nunca pode permitir mais desejos que o limite definido&#xD;
	 * @param aWish o desejo pedido, em String&#xD;
	 * @return verdadeiro se o desejo foi concedido, sen√£o falso</body>
          </ownedComment>
          <ownedParameter xmi:id="_REpy4Y0HEeyTK68GWrtVgA" name="aWish">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_REpy4o0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_REqZ8I0HEeyTK68GWrtVgA" name="showMe" method="_RI0hMI0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI8dA40HEeyTK68GWrtVgA">
            <body>Mostra o g√©nio. N√£o faz nada, as subclasses definir√£o o que acontece aqui</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_REroEI0HEeyTK68GWrtVgA" name="MagicLamp">
        <ownedComment xmi:id="_RI8dBI0HEeyTK68GWrtVgA">
          <body>Classe da l√¢mpada m√°gica&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_RIUK4I0HEeyTK68GWrtVgA" name="limGenies" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RIVZAI0HEeyTK68GWrtVgA" name="numGenies" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RIWAEI0HEeyTK68GWrtVgA" name="rubs">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_RIWAEY0HEeyTK68GWrtVgA" name="demons" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI0hMY0HEeyTK68GWrtVgA" name="MagicLamp" specification="_REuEUI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI0hMo0HEeyTK68GWrtVgA" name="aLimit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RI0hM40HEeyTK68GWrtVgA" type="_REroEI0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>this.limGenies = aLimit;&#xD;
		this.numGenies = aLimit;&#xD;
		this.demons = 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI1IQI0HEeyTK68GWrtVgA" name="rub" specification="_RIAB0I0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI1IQY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI1IQo0HEeyTK68GWrtVgA" type="_RElhcI0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>/* D√° a informa√ß√£o de quantas vezes esfregou a l√¢mpada, e pergunta o n.¬∫ de desejos a realizar */ &#xD;
		System.out.print(&quot;Est√° a esfregar a l√¢mpada &quot; + rubs + &#xD;
				&quot; vezes. Quantos desejos pretende realizar?&quot;);&#xD;
		&#xD;
		/* Vai buscar o n.+ de desejos */&#xD;
		int numWishes = MyErrorHandler.tryScannerIntFromNextLine(sc);&#xD;
		&#xD;
		if (numGenies > 0) // se existirem g√©nios&#xD;
		{&#xD;
			numGenies -= 1; // remove um g√©nio&#xD;
			&#xD;
			/* Condi√ß√£o de sa√≠da do g√©nio mal humorado: &quot;Sempre que a l√¢mpada for esfregada &#xD;
			 * um par de vezes, sem contar a atual&quot; - Ou seja, sempre que seja par ou &#xD;
			 * = 1, sai bem humorado&#xD;
			 */&#xD;
			&#xD;
			if ((rubs % 2 == 0) || (rubs == 1))&#xD;
			{&#xD;
				return new NiceGenie(numWishes); //retorna um g√©nio bom, com o n¬∫ de desejos escolhido&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				return new BadGenie(); //Sen√£o, retorna um g√©nio mau&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		else&#xD;
		{&#xD;
			return new Demon(numWishes); //chama o dem√≥nio, com o n¬∫ de desejos escolhido&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI1IQ40HEeyTK68GWrtVgA" name="rechargeLamp" specification="_RHNXoI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI1IRI0HEeyTK68GWrtVgA" name="demon" type="_REfa0I0HEeyTK68GWrtVgA"/>
          <language>java</language>
          <body>if (!demon.isRecycled()) //se o dem√≥nio n√£o foi reciclado&#xD;
		{&#xD;
			demon.recycle(); //recicla o dem√≥nio&#xD;
			rubs = 0; // faz reset ao n.¬∫ de esfregadelas&#xD;
			numGenies = limGenies; // faz reset ao n.¬∫ de g√©nios dispon√≠veis, pelo m√°ximo atribu√≠do no in√≠cio&#xD;
			demons++; // aumenta o n¬∫ de dem√≥nios consumidos (= recargas da l√¢mpada)&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_REuEUI0HEeyTK68GWrtVgA" name="MagicLamp" method="_RI0hMY0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_REurYY0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_REurYo0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_REurYI0HEeyTK68GWrtVgA" name="aLimit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_REvScI0HEeyTK68GWrtVgA" type="_REroEI0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RHNXoI0HEeyTK68GWrtVgA" name="rechargeLamp" method="_RI1IQ40HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RHNXoY0HEeyTK68GWrtVgA" name="demon" type="_REfa0I0HEeyTK68GWrtVgA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RIAB0I0HEeyTK68GWrtVgA" name="rub" method="_RI1IQI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIAo4I0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIAo4Y0HEeyTK68GWrtVgA" type="_RElhcI0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_REzj4I0HEeyTK68GWrtVgA" name="Main">
        <ownedComment xmi:id="_RI8dBY0HEeyTK68GWrtVgA">
          <body>Classe main da aplica√ß√£o MagicLamp&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_RIXOMI0HEeyTK68GWrtVgA" name="musicOn" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI1vUI0HEeyTK68GWrtVgA" name="main" specification="_RE1ZEI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI1vUY0HEeyTK68GWrtVgA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RI1vUo0HEeyTK68GWrtVgA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Scanner sc = new Scanner(System.in); // Cria e inicializa o scanner de input&#xD;
		&#xD;
		musicOn = false; // Quando arranca, a m√∫sica n√£o est√° a tocar&#xD;
		&#xD;
		printWelcomeToTheLamp(); // Imprime o ecr√£ de boas vindas&#xD;
		&#xD;
		MidiSequencer midiSequencer = new MidiSequencer(); // inicializa o sequenciador de Midis&#xD;
		try {&#xD;
			/** Inicia a m√∫sica escolhida no futuro pode ter mais op√ß√µes, &#xD;
			 * como uma juke-box &#xD;
			 */&#xD;
&#xD;
			midiSequencer.playSound(&quot;Aladdin-(Medley-Of-All-Songs).mid&quot;);&#xD;
			musicOn = true; // M√∫sica a tocar = true&#xD;
		} &#xD;
		catch (Exception e1) &#xD;
		{&#xD;
			MyErrorHandler.errorHandler(e1, sc, midiSequencer);&#xD;
		}&#xD;
		&#xD;
		/**&#xD;
		 * lamp - vari√°vel que guarda a l√¢mpada m√°gica&#xD;
		 */&#xD;
		MagicLamp lamp; &#xD;
		&#xD;
		int limit = 0; // cria e inicializa o n.¬∫ limite do random&#xD;
				&#xD;
		do // Ciclo para atribui√ß√£o do m√°ximo valor do random&#xD;
		{&#xD;
			try {&#xD;
				Random rand = new Random();&#xD;
				/** Gera o limite de desejos a partir do random */&#xD;
				limit = rand.nextInt(MyErrorHandler.tryStartNum(sc)); // Tenta atribuir o valor do scanner ao inteiro&#xD;
				break;&#xD;
			}&#xD;
			catch (Exception e1) {&#xD;
				MyErrorHandler.errorHandler(e1, sc, midiSequencer); // trata o erro&#xD;
			}&#xD;
		} while (true);&#xD;
		&#xD;
			&#xD;
		if (limit &lt;= 0) limit= 1; // para nunca dar 0 ou negativo no random&#xD;
&#xD;
			&#xD;
		lamp = new MagicLamp(limit); // Inst√¢ncia a l√¢mpada&#xD;
		&#xD;
		&#xD;
		do 	&#xD;
		{&#xD;
			printMenu(lamp); //Mostra o menu de gest√£o da l√¢mpada&#xD;
			&#xD;
			/**&#xD;
			 * cria e inicializa a vari√°vel que guarda a escolha do utilizador&#xD;
			 */&#xD;
			int choice = MyErrorHandler.tryOption(sc);&#xD;
			&#xD;
			switch (choice)&#xD;
			{&#xD;
				case 1:						&#xD;
					System.out.println(&quot;Quantas vezes deseja esfregar a l√¢mpada?&quot;); // Pergunta&#xD;
					int rubs = MyErrorHandler.tryScannerIntFromNextLine(sc); // Guarda o n¬∫ de esfregadelas&#xD;
		&#xD;
					lamp.setRubs(rubs); // Esfrega a l√¢mpada o n.¬∫ de vezes escolhido&#xD;
					&#xD;
					/* // cria o g√©nio - passa o scanner como par√¢metro, para que possa definir &#xD;
					 * o n.¬∫ de desejos ao esfregar a l√¢mpada&#xD;
					 */&#xD;
					Genie genie = lamp.rub(sc);&#xD;
					&#xD;
					genie.showMe(); // mostra o g√©nio&#xD;
					&#xD;
					int i;&#xD;
					String wish = &quot;&quot;; // Cria e inicializa a String que vai guardar o desejo&#xD;
					&#xD;
					/** dois processos diferentes para pedir os desejos, caso seja g√©nio ou dem√≥nio */&#xD;
					if (genie instanceof Demon) // se for dem√≥nio&#xD;
					{&#xD;
						Demon demon = (Demon) genie; // Faz o cast para transformar o g√©nio gen√©rico em dem√≥nio&#xD;
						&#xD;
						System.out.println(&quot;Pe√ßa um desejo!&quot;);&#xD;
						wish = MyErrorHandler.tryScannerNextLine(sc); // Guarda o desejo no scanner&#xD;
						&#xD;
						demon.grantWishDemon(wish, sc); // chama a fun√ß√£o recursiva que pede infinitos desejos ao dem√≥nio, at√© escolher parar&#xD;
&#xD;
						lamp.rechargeLamp(demon); // recarrega a l√¢mpada&#xD;
						&#xD;
					}&#xD;
					else //n√£o sendo dem√≥nio&#xD;
					{ &#xD;
						for (i = 1; i &lt;= genie.getNumWishes(); i++ ) // Ciclo para realizar os desejos pedidos&#xD;
						{&#xD;
							System.out.println(&quot;Pe√ßa um desejo!&quot;);&#xD;
							wish = MyErrorHandler.tryScannerNextLine(sc); // Guarda o desejo no scanner&#xD;
							genie.grantWish(wish); // Realiza o desejo&#xD;
						}&#xD;
					}&#xD;
					&#xD;
					System.out.println(&quot;Prima Enter para continuar&quot;);&#xD;
					&#xD;
					waitForEnter(); // aguarda que a tecla enter seja pressionada&#xD;
					&#xD;
					sc.nextLine(); // limpa o scanner&#xD;
			&#xD;
					break;&#xD;
				case 2:&#xD;
					/* Poss√≠vel melhoria /implementa√ß√£o futura:&#xD;
					 * 		idealmente esta op√ß√£o n√£o apareceria o ficheiro de som n√£o existisse&#xD;
					 */&#xD;
					try { &#xD;
						if (!musicOn) // Verifica se a m√∫sica est√° a tocar&#xD;
						{&#xD;
							midiSequencer = new MidiSequencer(); //Se n√£o estiver, liga a m√∫sica&#xD;
							// Manda tocar a m+usica, com o ficheiro escolhido&#xD;
							midiSequencer.playSound(&quot;Aladdin-(Medley-Of-All-Songs).mid&quot;); &#xD;
							musicOn = true; // Diz que a m√∫sica est√° a tocar&#xD;
						}&#xD;
						else &#xD;
						{&#xD;
							midiSequencer.stopSequencer(); // Desliga a m√∫sica&#xD;
							musicOn = false; // Diz que a m√∫sica desligada&#xD;
						}&#xD;
					} catch (Exception e) {&#xD;
						MyErrorHandler.errorHandler(e, sc, midiSequencer);&#xD;
					}&#xD;
				&#xD;
					break;&#xD;
				&#xD;
				case 3: /* sequ√™ncia de sa√≠da */&#xD;
			        printGameOver(sc); // imprime mensagem de despedida&#xD;
					&#xD;
			        midiSequencer.stopSequencer(); // Desliga a m√∫sica&#xD;
					sc.close(); // Fecha o scanner&#xD;
				&#xD;
			        System.exit(0); // Sai do sistema&#xD;
				default:&#xD;
					break;&#xD;
				}&#xD;
			} while (true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI2WYI0HEeyTK68GWrtVgA" name="printWelcomeToTheLamp" specification="_RE2AIY0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ  _     /\\                      _        __  __   __      _          ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ | |   |/\\| _ __  _ __  __ _ __| |__ _  |  \\/  |_/_/ __ _(_)__ __ _  ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ | |__/ _` | '  \\| '_ \\/ _` / _` / _` | | |\\/| / _` / _` | / _/ _` | ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ |____\\__,_|_|_|_| .__/\\__,_\\__,_\\__,_| |_|  |_\\__,_\\__, |_\\__\\__,_| ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ                 |_|                                |___/            ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚îÄ‚ñÑ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚îÄ‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚îÄ‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñê‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñÑ‚îÄ‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚îÄ‚ñÑ‚ñå‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñå‚ñÑ‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ Nas areias     ‚îÄ‚îÄ‚ñì‚ñÑ‚ñÄ‚ñë‚ñì‚ñë‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚ñë‚ñì‚ñë‚ñÄ‚ñì‚îÄ‚îÄ Para descobrir ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ do deserto,    ‚îÄ‚îÄ‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÑ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñê‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚îÄ‚îÄ o que ela      ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ achou uma      ‚îÄ‚îÄ‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚ñÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÄ‚ñë‚ñë‚ñì‚ñì‚ñë‚ñë‚ñÄ‚ñÑ‚îÄ‚îÄ‚îÄ‚îÄ‚ñÄ‚ñÑ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñì‚îÄ‚îÄ guarda, comece ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ misteriosa     ‚îÄ‚îÄ‚ñì‚ï´‚ñì‚ñà‚ñì‚ñà‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñê‚ñì‚ñë‚ñëP‚ñëD‚ñëS‚ñë‚ñì‚ñå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ñà‚ñì‚ñà‚ñì‚ñì‚îÄ‚îÄ por escolher   ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ l√¢mpada...     ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñë‚ñë‚ñå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñê‚ñë‚ñë‚ñë‚ï´‚ñì‚îÄ‚îÄ um n√∫mero      ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñà‚ñë‚ñå‚îÄ‚îÄ‚îÄ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚îÄ‚îÄ‚îÄ‚ñê‚ñë‚ñà‚ñë‚ï´‚ñì‚îÄ‚îÄ entre 1 e 20   ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñë‚ñë‚ñå‚îÄ‚îÄ‚îÄ‚ñê‚ñì‚ñì‚ñì‚ñå‚ñê‚ñí‚ñì‚ñì‚ñí‚ñå‚ñê‚ñì‚ñì‚ñì‚ñå‚îÄ‚îÄ‚îÄ‚ñê‚ñë‚ñë‚ñë‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñà‚ñë‚ñå‚îÄ‚îÄ‚îÄ‚ñê‚ñì‚ñì‚ñì‚ñå‚ñê‚ñì‚ñí‚ñí‚ñì‚ñå‚ñê‚ñì‚ñì‚ñì‚ñå‚îÄ‚îÄ‚îÄ‚ñê‚ñë‚ñà‚ñë‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñë‚ñë‚ñå‚ñÑ‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñÑ‚ñê‚ñë‚ñë‚ñë‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñà‚ñë‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñë‚ñà‚ñë‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñì‚ï´‚ñê‚ñë‚ñë‚ñë‚ñå‚ñë‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñê‚ñë‚ñà‚ñë‚ï´‚ñì‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);&#xD;
		System.out.println(&quot;‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Digite um n√∫mero entre 1 e 20 para iniciar ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ&quot;);	&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI2WYY0HEeyTK68GWrtVgA" name="printMenu" specification="_RHV6gI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI2WYo0HEeyTK68GWrtVgA" name="aLamp" type="_REroEI0HEeyTK68GWrtVgA"/>
          <language>java</language>
          <body>clearConsole();&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@   * * *  Menu da L√¢mpada M√°gica    * * *   @@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((#(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((#(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/*(#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/,,***,,*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@&amp;%&amp;&amp;@@@@@@@@@@@@@@@@@@@@@@@(,,*(#%&amp;&amp;%#*,.*&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@*#****/*#%(&amp;@@@@@@@@@@@@@@@@@(*,,//(#%%#(*,,,/#@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@&amp;%(**#%(#@@@@@@@@@@@@**,,,*********,****%@@@@@@@@@@@@&amp;#((#%@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@&amp;%(*,/%%#/&amp;@@@@@@/,**/(((((((////**,,,%@@@@@@@#/%*(&amp;@@%*#/(@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@&amp;%#/*,**#%####################%%%%%%%###@&amp;/(%@@@@@@@@@@,(#@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@%%#//**********//((##%%%#(/********/*/,@@%(%@@@@@@@@/(#@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@%##%#//*///*****************////////*@/%/%@@@@@@%/#(@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@#(#%&amp;%%#/////////////////(#%%%%((@@%*%*/%%(,##/%@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#(##%%%%%%%%%%%%%%%%%%%%%%#(@@@@@@@%(//(#&amp;@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*///(((######(((///&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@    G√©nios: &quot; + aLamp.getNumGenies() +&#xD;
				 &quot; de &quot; + aLamp.getLimGenies() + &#xD;
				 (aLamp.getNumGenies()&lt; 10 ? &quot; &quot; :&quot;&quot;) + &#xD;
				 (aLamp.getLimGenies()&lt; 10 ? &quot; &quot; :&quot;&quot;) + &quot;   @@@@@@@@@@@@&amp;%(///(&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,(#/,(*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@   N.¬∫ de recargas: &quot; + aLamp.getDemons() &#xD;
			+&quot;   @@@@@@@@@(*#&amp;%/**(/#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,*(%&amp;&amp;#//,*/%/,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,*//(((#############(((//**@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@     1 - Esfregar l√¢mpada         2 - &quot; + &#xD;
				(musicOn ? &quot;Desl&quot; : &quot;L&quot;) + &quot;igar m√∫sica&quot; + (musicOn ? &quot;&quot; : &quot;   &quot;) + &quot;          3 - Sair     @@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI2WY40HEeyTK68GWrtVgA" name="printGameOver" specification="_RICeEI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI2WZI0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <language>java</language>
          <body>// gera√ß√£o do buffer para sair do ciclo infinito&#xD;
		InputStreamReader inputStream = new InputStreamReader(System.in); // Cria o leitor de streams&#xD;
		BufferedReader bufferedReader = new BufferedReader(inputStream); // Cria o buffer com o leitor de streams&#xD;
		&#xD;
		do { // Ciclo infinito para alternar entre as duas telas, mostrando os cr√©ditos finais&#xD;
			 // Sai do ciclo quando d√° enter, apanhado pelo buffer abaixo&#xD;
			try {&#xD;
				if (bufferedReader.ready()) //coloca o buffer em escuta&#xD;
				 {&#xD;
				     bufferedReader.readLine(); // se l√™ uma linha...&#xD;
&#xD;
				     break; // sai do ciclo&#xD;
				 }&#xD;
			} catch (IOException e1) {&#xD;
&#xD;
				MyErrorHandler.errorHandler(e1, sc, null);&#xD;
			}&#xD;
			&#xD;
			clearConsole(); // limpa a consola&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@                                                                           @@&quot;);&#xD;
			System.out.println(&quot;@@      ________              .__         ________                           @@&quot;);&#xD;
			System.out.println(&quot;@@      /  _____/  ____   ____ |__| ____   \\_____  \\___  __ ___________      @@&quot;);&#xD;
			System.out.println(&quot;@@     /   \\  ____/ __ \\ /    \\|  |/ __ \\   /   |   \\  \\/ // __ \\_  __ \\     @@&quot;);&#xD;
			System.out.println(&quot;@@     \\    \\_\\  \\  ___/|   |  \\  \\  ___/  /    |    \\   /\\  ___/|  | \\/     @@&quot;);&#xD;
			System.out.println(&quot;@@      \\______  /\\___  >___|  /__|\\___  > \\_______  /\\_/  \\___  >__|        @@&quot;);&#xD;
			System.out.println(&quot;@@             \\/     \\/     \\/        \\/          \\/          \\/            @@&quot;);&#xD;
			System.out.println(&quot;@@                                                                           @@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ _(^.^)_ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@ _(^.^)_ @@@@@@@   *   *  Cr√©ditos:   *   *   @@@@@@ _(^.^)_ @@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@ *   * @@@@@@@@        Paulo Perneta         @@@@@@@ *   * @@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@          Jo√£o Rocha          @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@ \\(^.^)/ @@@@@@@   Disney (Tema do Aladino)   @@@@@@ \\(^.^)/ @@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ _(^.^)_ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@      Prima enter para sair      @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			try {&#xD;
				Thread.sleep(500); // dorme durante 0,5 segundos&#xD;
			} catch (InterruptedException e) {&#xD;
				&#xD;
				MyErrorHandler.errorHandler(e, sc, null);&#xD;
			}&#xD;
			clearConsole(); // Limpa a consola&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@                                                                           @@&quot;);&#xD;
			System.out.println(&quot;@@      ________              .__         ________                           @@&quot;);&#xD;
			System.out.println(&quot;@@      /  _____/  ____   ____ |__| ____   \\_____  \\___  __ ___________      @@&quot;);&#xD;
			System.out.println(&quot;@@     /   \\  ____/ __ \\ /    \\|  |/ __ \\   /   |   \\  \\/ // __ \\_  __ \\     @@&quot;);&#xD;
			System.out.println(&quot;@@     \\    \\_\\  \\  ___/|   |  \\  \\  ___/  /    |    \\   /\\  ___/|  | \\/     @@&quot;);&#xD;
			System.out.println(&quot;@@      \\______  /\\___  >___|  /__|\\___  > \\_______  /\\_/  \\___  >__|        @@&quot;);&#xD;
			System.out.println(&quot;@@             \\/     \\/     \\/        \\/          \\/          \\/            @@&quot;);&#xD;
			System.out.println(&quot;@@                                                                           @@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ \\(^.^)/ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@ \\(^.^)/ @@@@@@@     *    Cr√©ditos:     *     @@@@@@ \\(^.^)/ @@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@   *   @@@@@@@@        Paulo Perneta         @@@@@@@   *   @@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@          Jo√£o Rocha          @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@ \\(^.^)/ @@@@@@@   Disney (Tema do Aladino)   @@@@@@ \\(^.^)/ @@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@                              @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ \\(^.^)/ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@      Prima enter para sair      @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
			&#xD;
			try &#xD;
			{&#xD;
				Thread.sleep(500); // dorme durante 0,5 segundos&#xD;
			} &#xD;
			catch (InterruptedException e) &#xD;
			{&#xD;
				MyErrorHandler.errorHandler(e, sc, null);&#xD;
			}&#xD;
						&#xD;
		} while (true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI29cI0HEeyTK68GWrtVgA" name="clearConsole" specification="_RE3OQI0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>for(int i = 0; i &lt; 50; i++)&#xD;
		    System.out.println();   &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI29cY0HEeyTK68GWrtVgA" name="waitForEnter" specification="_RE31UI0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>try{&#xD;
			System.in.read();&#xD;
			}&#xD;
		catch(Exception e){&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_RE1ZEI0HEeyTK68GWrtVgA" name="main" isStatic="true" method="_RI1vUI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RE1ZEY0HEeyTK68GWrtVgA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RE2AII0HEeyTK68GWrtVgA" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RE2AIY0HEeyTK68GWrtVgA" name="printWelcomeToTheLamp" isStatic="true" method="_RI2WYI0HEeyTK68GWrtVgA"/>
        <ownedOperation xmi:id="_RE3OQI0HEeyTK68GWrtVgA" name="clearConsole" isStatic="true" method="_RI29cI0HEeyTK68GWrtVgA"/>
        <ownedOperation xmi:id="_RE31UI0HEeyTK68GWrtVgA" name="waitForEnter" isStatic="true" method="_RI29cY0HEeyTK68GWrtVgA"/>
        <ownedOperation xmi:id="_RHV6gI0HEeyTK68GWrtVgA" name="printMenu" isStatic="true" method="_RI2WYY0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RHWhkI0HEeyTK68GWrtVgA" name="aLamp" type="_REroEI0HEeyTK68GWrtVgA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RICeEI0HEeyTK68GWrtVgA" name="printGameOver" isStatic="true" method="_RI2WY40HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIDFII0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RE5qgI0HEeyTK68GWrtVgA" name="MidiSequencer">
        <ownedComment xmi:id="_RI9EEI0HEeyTK68GWrtVgA">
          <body>Classe para sequencia√ß√£o de Midis&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_RIZDYI0HEeyTK68GWrtVgA" name="sequencer" visibility="private" type="_RHiu0Y0HEeyTK68GWrtVgA" association="_RJDKsI0HEeyTK68GWrtVgA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI29co0HEeyTK68GWrtVgA" name="MidiSequencer" specification="_RE7fsI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI29c40HEeyTK68GWrtVgA" type="_RE5qgI0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>sequencer = null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI3kgI0HEeyTK68GWrtVgA" name="playSound" specification="_RE8t0I0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI3kgY0HEeyTK68GWrtVgA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>// Obtains the default Sequencer connected to a default device.&#xD;
	    // Sequencer sequencer = null;&#xD;
		try {&#xD;
			sequencer = MidiSystem.getSequencer();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			&#xD;
			MyErrorHandler.errorHandler(e, null, null);&#xD;
		}&#xD;
		&#xD;
		/* abre o sequenciador, indicando que deve adquiror agora&#xD;
		 * quaiaquer recursos do sistema que necessite para se tornar operacional&#xD;
		 */&#xD;
	    try {&#xD;
			sequencer.open(); //abre o sequenciador&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			MyErrorHandler.errorHandler(e, null, null);&#xD;
		}&#xD;
&#xD;
	    // cria a stream a partir de um ficheiro&#xD;
	    InputStream inputstream = null;&#xD;
		try {&#xD;
			String basePath = new File(&quot;&quot;).getAbsolutePath(); // Vai buscar o caminho relativo da pasta&#xD;
		    &#xD;
			inputstream = new BufferedInputStream(new FileInputStream(new File(basePath + &quot;\\&quot; + filename)));&#xD;
		} catch (FileNotFoundException e) {&#xD;
			MyErrorHandler.errorHandler(e, null, null);&#xD;
		}&#xD;
	    // Define a sequ√™ncia correta sober a qual o sequenciador opera.&#xD;
	    // A stream tem de apontar para o ficheiro MIDI.&#xD;
	    try {&#xD;
			sequencer.setSequence(inputstream);&#xD;
		} catch (IOException e) {&#xD;
			MyErrorHandler.errorHandler(e, null, null);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			MyErrorHandler.errorHandler(e, null, null);&#xD;
		}&#xD;
&#xD;
	    // Come√ßa a tocar a sequ√™ncia de dados MIDI correntemente carregada.&#xD;
	    sequencer.start();&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI3kgo0HEeyTK68GWrtVgA" name="stopSequencer" specification="_RE9U4Y0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>sequencer.stop();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_RE7fsI0HEeyTK68GWrtVgA" name="MidiSequencer" method="_RI29co0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_RE8GwI0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_RE8GwY0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_RI9EEY0HEeyTK68GWrtVgA">
            <body>M√©todo construtor do sequenciador&#xD;
	 *</body>
          </ownedComment>
          <ownedParameter xmi:id="_RE8Gwo0HEeyTK68GWrtVgA" type="_RE5qgI0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RE8t0I0HEeyTK68GWrtVgA" name="playSound" method="_RI3kgI0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI9EEo0HEeyTK68GWrtVgA">
            <body>Toca uma m√∫sica / liga o sequenciador para uma m√∫sica&#xD;
	 * &#xD;
	 * @param filename&#xD;
	 * 				nome do ficheiro a tocar, em String</body>
          </ownedComment>
          <ownedParameter xmi:id="_RE9U4I0HEeyTK68GWrtVgA" name="filename">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RE9U4Y0HEeyTK68GWrtVgA" name="stopSequencer" method="_RI3kgo0HEeyTK68GWrtVgA">
          <ownedComment xmi:id="_RI9EE40HEeyTK68GWrtVgA">
            <body>Para o sequenciador</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RE_xII0HEeyTK68GWrtVgA" name="MyErrorHandler">
        <ownedComment xmi:id="_RI9rII0HEeyTK68GWrtVgA">
          <body>Classe geral para tratamento de erros&#xD;
@author P. Perneta e J. Rocha&#xD;
 *</body>
        </ownedComment>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI4LkI0HEeyTK68GWrtVgA" name="errorHandler" specification="_RIHWkI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI4LkY0HEeyTK68GWrtVgA" name="err" type="_RIFhYY0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI4Lko0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI4Lk40HEeyTK68GWrtVgA" name="midiSequencer" type="_RE5qgI0HEeyTK68GWrtVgA"/>
          <language>java</language>
          <body>try {&#xD;
			throw err; // atira o erro recebido, para tratamento pelos catch abaixo&#xD;
		}&#xD;
		catch (InputMismatchException e) // quando n√£o √© um n.¬∫ inteiro&#xD;
		{&#xD;
			System.out.println(&quot;Op√ß√£o inv√°lida. Por favor escolha um n√∫mero.&quot;); // imprime mensagem de erro&#xD;
		}&#xD;
		catch (NumberFormatException e) // quando est√° fora do formato de dados aceite&#xD;
		{&#xD;
			System.out.println(&quot;Op√ß√£o inv√°lida. Por favor escolha outro n√∫mero.&quot;); // imprime mensagem de erro&#xD;
		}&#xD;
		catch (IllegalArgumentException e) // quando apanha o zero na escolha do random&#xD;
		{&#xD;
			System.out.println(&quot;Op√ß√£o inv√°lida. Por favor escolha um n√∫mero maior que zero.&quot;); // imprime mensagem de erro&#xD;
		}&#xD;
		catch (FileNotFoundException e) // ficheiro n√£o encontrado&#xD;
		{&#xD;
			System.out.println(&quot;Ficheiro audio n√£o encontrado, executando sem som.\nDetalhes: &quot; +&#xD;
					e.getMessage()); // Mostra a mensagem do erro, para que se perceba qual √© o ficheiro em falta&#xD;
		}&#xD;
		catch (IllegalStateException e) // estado ilegal (relacionado ao sequenciador de Midis)&#xD;
		{&#xD;
			// n√£o faz nada por agora, s√≥ passa √† frente&#xD;
		}&#xD;
	    catch (UnsupportedAudioFileException e) //ficheiro audio n√£o suportado (classe AudioPlayer)&#xD;
		{&#xD;
	        System.out.println(&quot;Ficheiro audio n√£o suportado.&quot;);&#xD;
	        e.printStackTrace();&#xD;
	    } catch (LineUnavailableException e) // linha de audio indispon√≠vel (classe AudioPlayer)&#xD;
		{&#xD;
	        System.out.println(&quot;Sem linha dispon√≠vel para tocar o audio.&quot;);&#xD;
	        e.printStackTrace();&#xD;
	    } catch (IOException e) // erro I/O (classe AudioPlayer)&#xD;
		{&#xD;
	        System.out.println(&quot;Erro ao tocar o audio.&quot;);&#xD;
	        e.printStackTrace();&#xD;
	    }&#xD;
		catch (Exception e) // Outros erros n√£o previstos acima&#xD;
		{&#xD;
			e.printStackTrace();&#xD;
	        System.out.println(&quot;Ocorreu um erro imprevisto. Finalizando programa...&quot;); // imprime mensagem de despedida&#xD;
			&#xD;
	        if (midiSequencer != null) midiSequencer.stopSequencer(); // Desliga a m√∫sica, se o sequenciador existir&#xD;
	        if (sc != null) sc.close(); // Fecha o scanner, se n√£o for nulo&#xD;
			&#xD;
	        System.exit(0); // Sai do sistema&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI4LlI0HEeyTK68GWrtVgA" name="tryScannerIntFromNextLine" specification="_RIIksI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI4LlY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI4Llo0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int nInt = 0; // inicializa a vari√°vel que guarda o inteiro a devolver&#xD;
		&#xD;
		do&#xD;
		{&#xD;
			try &#xD;
			{&#xD;
				nInt = Integer.parseInt (tryScannerNextLine(sc)) ; // Tenta atribuir o valor do scanner ao inteiro&#xD;
				break;&#xD;
			}&#xD;
			catch (Exception e1) {&#xD;
				errorHandler(e1, sc, null); // Trata o erro&#xD;
			}&#xD;
		} while (true);&#xD;
		&#xD;
		return nInt;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI4yoI0HEeyTK68GWrtVgA" name="tryScannerNextLine" specification="_RIJLwI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI4yoY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI4yoo0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String sString = &quot;&quot;;&#xD;
		do&#xD;
		{&#xD;
			try &#xD;
			{&#xD;
				sString = sc.nextLine(); // Tenta atribuir o valor do scanner √† String&#xD;
				&#xD;
				if (sString.trim().isEmpty()) // Se a tring estiver vazia&#xD;
				{&#xD;
					System.out.println(&quot;O valor inserido estava vazio, ou s√≥ continha espa√ßos. Por favor digite outra vez.&quot;);&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					break;&#xD;
				}					&#xD;
					&#xD;
			}&#xD;
			catch (Exception e)&#xD;
			{// quando n √© uma String v√°lida&#xD;
				errorHandler(e, sc, null); // Trata o erro&#xD;
			}&#xD;
		} while (true);&#xD;
		&#xD;
		return sString;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI4yo40HEeyTK68GWrtVgA" name="tryStartNum" specification="_RIKZ4I0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI4ypI0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI4ypY0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int num;&#xD;
		&#xD;
		do&#xD;
		{&#xD;
			num = tryScannerIntFromNextLine(sc);&#xD;
			&#xD;
			if (num > 0 &amp;&amp; num &lt;= 20)&#xD;
			{&#xD;
				break;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				System.out.println(&quot;Por favor escolha um n√∫mero entre 1 e 20&quot;);&#xD;
&#xD;
			}&#xD;
		} while (true);&#xD;
		&#xD;
		return num;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI5ZsI0HEeyTK68GWrtVgA" name="tryOption" specification="_RILoAI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI5ZsY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RI5Zso0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int option;&#xD;
		&#xD;
		do&#xD;
		{&#xD;
	&#xD;
			option = tryScannerIntFromNextLine(sc);&#xD;
			&#xD;
			if (option > 0 &amp;&amp; option &lt;= 3)&#xD;
			{&#xD;
				break;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				System.out.println(&quot;Op√ß√£o inv√°3lida. Por favor escolha uma op√ß√£o de 1 a 3&quot;);&#xD;
&#xD;
			}&#xD;
		} while (true);&#xD;
		&#xD;
		return option;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_RIHWkI0HEeyTK68GWrtVgA" name="errorHandler" isStatic="true" method="_RI4LkI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIHWkY0HEeyTK68GWrtVgA" name="err" type="_RIFhYY0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIHWko0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIH9oI0HEeyTK68GWrtVgA" name="midiSequencer" type="_RE5qgI0HEeyTK68GWrtVgA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RIIksI0HEeyTK68GWrtVgA" name="tryScannerIntFromNextLine" isStatic="true" method="_RI4LlI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIIksY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIIkso0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RIJLwI0HEeyTK68GWrtVgA" name="tryScannerNextLine" isStatic="true" method="_RI4yoI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIJy0I0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIJy0Y0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RIKZ4I0HEeyTK68GWrtVgA" name="tryStartNum" isStatic="true" method="_RI4yo40HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RIKZ4Y0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RILA8I0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_RILoAI0HEeyTK68GWrtVgA" name="tryOption" isStatic="true" method="_RI5ZsI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RILoAY0HEeyTK68GWrtVgA" name="sc" type="_RHIfII0HEeyTK68GWrtVgA"/>
          <ownedParameter xmi:id="_RIMPEI0HEeyTK68GWrtVgA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RFJiII0HEeyTK68GWrtVgA" name="NiceGenie">
        <ownedComment xmi:id="_RI9rIY0HEeyTK68GWrtVgA">
          <body>G√©nio bom - concede todos os desejos&#xD;
@author P. Perneta e J. Rocha</body>
        </ownedComment>
        <generalization xmi:id="_RHuVAI0HEeyTK68GWrtVgA" general="_RElhcI0HEeyTK68GWrtVgA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI6AwI0HEeyTK68GWrtVgA" name="NiceGenie" specification="_RFKwQI0HEeyTK68GWrtVgA">
          <ownedParameter xmi:id="_RI6AwY0HEeyTK68GWrtVgA" name="aNumWishes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RI6Awo0HEeyTK68GWrtVgA" type="_RFJiII0HEeyTK68GWrtVgA" direction="return"/>
          <language>java</language>
          <body>super();&#xD;
		this.numWishes = aNumWishes; // n.¬∫ m√°ximo de desejos dispon√≠veis&#xD;
		this.remWishes = aNumWishes; // o remanescente √© o n.¬∫ m√°ximo na inicializa√ß√£o&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RI6Aw40HEeyTK68GWrtVgA" name="showMe" specification="_RFMlcI0HEeyTK68GWrtVgA">
          <language>java</language>
          <body>Main.clearConsole();&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.  &amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@( ,&amp;&amp;&amp;&amp;&amp;      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@              @@@@@@@@@@ @@@@@@@@@@* @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@   Ol√°! Eu sou o  @@@@@@@ &amp;@ . @@@ . @ /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@   g√©nio bom, e   @@@@@,* &amp;@@ @&amp;.&amp;@ @@ @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@   posso realizar @@@@@@ . @@(.==.)@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@   &quot; + remWishes + &#xD;
				&quot; desejo&quot; + (remWishes > 1 ? &quot;s&quot; : &quot;  &quot;) + &quot;     @@@@@@@. @@@&amp;@&amp;@@/ .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@              @@@@@@  @@@@,       &amp;@@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. @@@@@@@@@@ (@@@@@@@@@/ @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ,@@@@@@(#@@@@@@&amp;, ,@@@@@&amp; @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@.&amp;@@@@   @@@@@@@@@ @@@.@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@(  @@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &amp;@@@@@@@@@@&amp; ,@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.  *(*   @@@.  .(/   @@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;  @@@@@@@@@@@@@@@@@@@ &amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@ %@@@@@@@@@@@@@@@@@@@% ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@. @@@@@@@@&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;.   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@/  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@. @@@ &amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@ /@ &amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@..&amp;@@@@@.   &amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@           ,# %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
		System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_RFKwQI0HEeyTK68GWrtVgA" name="NiceGenie" method="_RI6AwI0HEeyTK68GWrtVgA">
          <eAnnotations xmi:id="_RFLXUY0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_RFL-YI0HEeyTK68GWrtVgA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_RFLXUI0HEeyTK68GWrtVgA" name="aNumWishes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_RFL-YY0HEeyTK68GWrtVgA" type="_RFJiII0HEeyTK68GWrtVgA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_RFMlcI0HEeyTK68GWrtVgA" name="showMe" method="_RI6Aw40HEeyTK68GWrtVgA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_RJDKsI0HEeyTK68GWrtVgA" name="" memberEnd="_RJDKsY0HEeyTK68GWrtVgA _RIZDYI0HEeyTK68GWrtVgA">
        <ownedEnd xmi:id="_RJDKsY0HEeyTK68GWrtVgA" name="" type="_RE5qgI0HEeyTK68GWrtVgA" association="_RJDKsI0HEeyTK68GWrtVgA"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_Qq9ggI0HEeyTK68GWrtVgA">
      <eAnnotations xmi:id="_QrDnII0HEeyTK68GWrtVgA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_QrK74I0HEeyTK68GWrtVgA" base_Package="_OTt8UI0HEeyTK68GWrtVgA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Reference xmi:id="_RG09II0HEeyTK68GWrtVgA" base_Element="_RGzH8I0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RG4AcI0HEeyTK68GWrtVgA" base_Element="_RG2yUI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RG51oI0HEeyTK68GWrtVgA" base_Element="_RG4ngI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RG848I0HEeyTK68GWrtVgA" base_Element="_RG6csI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RG-uII0HEeyTK68GWrtVgA" base_Element="_RG848Y0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RG_8QI0HEeyTK68GWrtVgA" base_Element="_RG-uIY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHBxcI0HEeyTK68GWrtVgA" base_Element="_RHAjUI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHDmoI0HEeyTK68GWrtVgA" base_Element="_RHBxcY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHJtQI0HEeyTK68GWrtVgA" base_Element="_RHIfII0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHRCAI0HEeyTK68GWrtVgA" base_Element="_RHPz4I0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHSQII0HEeyTK68GWrtVgA" base_Element="_RHRCAY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHUFUI0HEeyTK68GWrtVgA" base_Element="_RHS3MI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHVTcI0HEeyTK68GWrtVgA" base_Element="_RHUFUY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHZk4I0HEeyTK68GWrtVgA" base_Element="_RHYWwI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHbaEI0HEeyTK68GWrtVgA" base_Element="_RHaL8I0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHcoMI0HEeyTK68GWrtVgA" base_Element="_RHcBII0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHedYI0HEeyTK68GWrtVgA" base_Element="_RHdPQI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHfrgI0HEeyTK68GWrtVgA" base_Element="_RHedYY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHhgsI0HEeyTK68GWrtVgA" base_Element="_RHgSkI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHiu0I0HEeyTK68GWrtVgA" base_Element="_RHhgsY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHj88I0HEeyTK68GWrtVgA" base_Element="_RHiu0Y0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHnAQI0HEeyTK68GWrtVgA" base_Element="_RHlyII0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHoOYI0HEeyTK68GWrtVgA" base_Element="_RHnAQY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RHpcgI0HEeyTK68GWrtVgA" base_Element="_RHoOYY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RH7JUI0HEeyTK68GWrtVgA" base_Element="_RH57MI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Annotations xmi:id="_RH8XcI0HEeyTK68GWrtVgA" base_Element="_RH57MI0HEeyTK68GWrtVgA">
    <annotations xmi:id="_RH8XcY0HEeyTK68GWrtVgA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RIGvgI0HEeyTK68GWrtVgA" base_Element="_RIFhYY0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RIP5cI0HEeyTK68GWrtVgA" base_Element="_RIOrUI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RISVsI0HEeyTK68GWrtVgA" base_Element="_RIRuoI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RITj0I0HEeyTK68GWrtVgA" base_Element="_RIS8wI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RIYcUI0HEeyTK68GWrtVgA" base_Element="_RIXOMI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RIZqcI0HEeyTK68GWrtVgA" base_Element="_RIZDYI0HEeyTK68GWrtVgA"/>
  <UMLLabProfile:Reference xmi:id="_RJEY0I0HEeyTK68GWrtVgA" base_Element="_RJDKsI0HEeyTK68GWrtVgA"/>
</xmi:XMI>
